#!/bin/sh

hold_arguments()
{
	cat >/tmp/configure.rerun <<EOF
#!/bin/sh
$0 $@
EOF
	chmod 755 /tmp/configure.rerun
	return
}

save_arguments()
{
    echo "saving args in configure.rerun"
    mv /tmp/configure.rerun .
	return
}

print_usage()
{
	cat <<EOF
Use: configure [options]
Where options are:
 --prefix  <dir>           The directory in which to install $project
 --use-pcre <dir>          The directory to find PCRE in. 
                           There should be include and lib subdirectories
 --lib-name <name>         The name for the ClassAd library
 --enable-shlib            Allow user functions in shared libraries.
 --enable-namespace        Use the classad namespace
 --enable-flexible-member  Allow member function to be (list, X) or (X, list)
 --help                    Show this message         

Use configure.rerun to rerun configure with previously saved arguments.
EOF
	return
}

hold_arguments "$@"

project="ClassAds"
install_dir="/usr/local"
pcre_dir=""
lib_name=""
enable_shlib=0
enable_namespace=0
enable_flexible_member=0

while [ $# -gt 0 ]
do
	case $1 in
		--prefix)
			shift
			install_dir=$1
			;;
		--use-pcre)
			shift
			pcre_dir=$1
			;;
		--lib-name)
			shift
			lib_name=$1
			;;
		--enable-shlib)
			enable_shlib=1
			;;
		--enable-namespace)
			enable_namespace=1
			;;
		--enable-flexible-member)
			enable_flexible_member=1
			;;
		-h | -help | --h | --help)
			print_usage
			exit 1
			;;
		*)
			echo "Unknown argument $1"
			print_usage
			exit 1
			;;
	esac
	shift
done

save_arguments

echo "Creating Makefile.config..."

cat <<EOF >Makefile.config
# Generated at `date` by `whoami`@`uname -n`

DESTDIR = ${install_dir}
EOF

if [ -z "${pcre_dir}" ]
then
	echo "REGEX_INCLUDE_FLAGS = -DUSE_POSIX_REGEX" >> Makefile.config
else
	echo "REGEX_INCLUDE_FLAGS = -DUSE_PCRE -I${pcre_dir}/include" >> Makefile.config
	echo "REGEX_LIB_FLAGS = -L${pcre_dir}/lib -lpcre" >> Makefile.config
fi

if [ "${enable_shlib}" = 1 ]
then
	echo "EXTRA_LD_FLAGS = \$(REGEX_LIB_FLAGS) -Xlinker --export-dynamic -ldl" >> Makefile.config
	echo "all:: shared" >> Makefile.config
else
	echo "EXTRA_LD_FLAGS = \$(REGEX_LIB_FLAGS)" >> Makefile.config
fi

if [ "${enable_namespace}" = 1 ]
then
	echo "EXTRA_C_PLUS_FLAGS = \$(REGEX_INCLUDE_FLAGS) -DWANT_NAMESPACES" >> Makefile.config
else
	echo "EXTRA_C_PLUS_FLAGS = \$(REGEX_INCLUDE_FLAGS)" >> Makefile.config
fi

# Figure out what the name of the ClassAd library should be
if [ -z "${lib_name}" ]
then
	if [ "${enable_shlib}" = 1 ] && [ "${enable_namespace}" = 1 ]
	then
		lib_name="classad_sh_ns"
	elif [ "${enable_shlib}" = 1 ]
	then 
		lib_name="classad_sh"
	elif [ "${enable_namespace}" = 1 ]
	then 
		lib_name="classad_ns"
	else
		lib_name="classad"
	fi
fi
echo "LIB_NAME = lib${lib_name}.a" >> Makefile.config
echo "LIB_LINK_NAME = ${lib_name}" >> Makefile.config

echo "Creating classad_features.h..."
rm -f classad_features.h
echo "/* classad_features.h, automatically generated at " `date` "*/" >> classad_features.h
cat >> classad_features.h <<EOF
#ifndef __CLASSAD_FEATURES_H
#define __CLASSAD_FEATURES_H

EOF
if [ "${enable_shlib}" = 1 ] 
then
cat >> classad_features.h <<EOF
#define ENABLE_SHARED_LIBRARY_FUNCTIONS

EOF
fi

if [ "${enable_flexible_member}" = 1 ]
then
cat >> classad_features.h <<EOF
#define FLEXIBLE_MEMBER

EOF
fi

echo "#endif" >> classad_features.h


echo ""
echo "To build, type 'make'"
echo "To install, type 'make install'"
echo ""

exit 0

