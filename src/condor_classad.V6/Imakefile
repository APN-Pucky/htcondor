SRC_DIR = $(SRC_TREE)/condor_classad.V6

C_PLUS_FLAGS = -Wall $(STD_C_PLUS_FLAGS) -fno-implicit-templates
CFLAGS = -Wall $(STD_C_FLAGS)

SRC = lexer.C source.C operators.C attrrefs.C fnCall.C literals.C exprTree.C \
		classad.C exprList.C values.C instantiations.C sink.C domain.C


OBJ = lexer.o source.o operators.o attrrefs.o fnCall.o literals.o exprTree.o \
		classad.o exprList.o values.o instantiations.o sink.o domain.o

LIB =  ./libclassad.a ../condor_c++_util/cplus_lib.a \
      ../condor_util_lib/util_lib.a ../condor_io/libcondor.a \
      RpcLib SocketLib

ULIB =  ../condor_c++_util/cplus_lib.a ../condor_util_lib/util_lib.a \
		../condor_io/libcondor.a RpcLib SocketLib


all_target(libclassad.a)

library_target(libclassad.a,$(OBJ))
c_plus_target (testeval, $(OBJ) testeval.o , $(LIB))
C_target(testeval.C,testeval.o)
pure_c_plus_target(testp.pure, $(OBJ), $(LIB))

clean::
	rm -f *.o 
