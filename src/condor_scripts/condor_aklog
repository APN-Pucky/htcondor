#!/bin/bash

##**************************************************************
##
## Copyright (C) 1990-2016, Condor Team, Computer Sciences Department,
## University of Wisconsin-Madison, WI.
##
## Licensed under the Apache License, Version 2.0 (the "License"); you
## may not use this file except in compliance with the License.  You may
## obtain a copy of the License at
##
##    http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
##**************************************************************

## Author: Todd Tannenbaum <tannenba@cs.wisc.edu>


exitwitherr() { 
  printf "%s. Aborting.\n" "$2" >&2
  exit "$1"
}

checkexist() {
  for prog in "$@"; do
    hash $prog 2>/dev/null || exitwitherr 50 "Failed to find $prog installed in path"
  done
}

if [ "$1" != "-htcpart2" ]; then

  checkexist klist keyctl aklog awk cut
  klist -s || exitwitherr 50 "Failed to find a valid KRB5 credential cache"
  export master_ring=${CONDOR_RINGID:-"@u"}
  if [ -n "$CONDOR_KRB5_UID" ]; then
    id="$CONDOR_KRB5_UID"
  else
    checkexist grep xargs getent
    id="${CONDOR_KRB5_UID:-`klist | grep "Default principal" | cut -d' ' -f3 | cut -d@ -f1 | cut -d/ -f1 | xargs getent passwd`}" \
      || exitwitherr 50 "Failed to find uid for default principal"
    id=`echo "$id" | cut -d: -f3`
  fi 
  export uid_ring_name="htcondor_uid$id"
  keyctl session "$uid_ring_name" "$0" "-htcpart2" "$@" |& awk \
  '/^Joined session key/ { next }
   /^aklog_real_exit_code/ { exit $2 }
   { print $0 }
  ' -
  exit $?

else 

  shift
  checkexist keyctl aklog cut flock
  session_uid=`keyctl rdescribe @s | cut -d\; -f2`
  if [ "$session_uid" != $UID ]; then
    exitwitherr 50 "Uid of keyring $uid_ring_name is $session_uid, but ruid is $UID"
  fi
  keyctl link @s "$master_ring" \
    || exitwitherr 50 "Failed to link keyring $uid_ring_name to master ring $master_ring"
  export uid_ring_id=`keyctl search @s keyring "$uid_ring_name"`
  lockfile="/${KRB5CCNAME#*/}"
  if [ "$KRB5CCNAME" != "$lockfile" -a "${KRB5CCNAME%%:*}" != "FILE" ]; then
    exitwitherr 50 "Only KRB5 caches of type FILE are supported"
  fi
  keyctl search @s afs_pag _pag >&/dev/null || \
    { 
	  flock -x -w 20 200 \
	    || exitwitherr 50 "Failed to obtain file lock on $lockfile"
	  keyctl search @s afs_pag _pag >&/dev/null || \
	    pagsh -c "keyctl link @s $uid_ring_id"
	} 200<$lockfile || exitwitherr 50 "KRB5CCNAME file does not exist"
  aklog "$@"
  echo aklog_real_exit_code $?

fi
