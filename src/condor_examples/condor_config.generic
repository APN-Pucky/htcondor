######################################################################
##
##  condor_config
##
##  This is the global configuration file for condor.
##
##  The file is divided into four main parts:  settings you must
##  customize, settings you may want to customize, settings that
##  control the policy of when condor will start and stop jobs on your
##  machines, and settings you should probably leave alone (unless you
##  know what you're doing)
##
##  Please read the INSTALL file (or the Install chapter in the
##  Condor Administrator's Manual) for detailed explainations of the 
##  various settings in here and possible ways to configure your
##  pool. 
##
######################################################################

######################################################################
######################################################################
##  Settings you must customize:
######################################################################
######################################################################

##  What machine is your central manager?
CONDOR_HOST	= central-manager-hostname.your.domain

##--------------------------------------------------------------------
##  Pathnames:
##--------------------------------------------------------------------
##  Where have you installed the bin, sbin and lib condor directories?   
RELEASE_DIR		= /usr/local/condor

##  Where is the local condor directory for each host?  
LOCAL_DIR		= $(TILDE)
#LOCAL_DIR		= $(RELEASE_DIR)/hosts/$(HOSTNAME)

##  Where is the machine-specific local config file for each host?
LOCAL_CONFIG_FILE	= $(LOCAL_DIR)/condor_config.local
#LOCAL_CONFIG_FILE	= $(RELEASE_DIR)/etc/$(HOSTNAME).local

##--------------------------------------------------------------------
##  Mail parameters:
##--------------------------------------------------------------------
##  When something goes wrong with condor at your site, who chould get
##  the email?
CONDOR_ADMIN		= condor-admin@your.domain

##  Full path to a mail delivery program that understands that "-s"
##  means you want to specify a subject:
MAIL			= /usr/bin/mail


######################################################################
######################################################################
##  Settings you may want to customize: 
##  (it is generally safe to leave these untouched) 
######################################################################
######################################################################

##--------------------------------------------------------------------
##  Network filesystem parameters:
##--------------------------------------------------------------------
##  If all the machines in your domain share a common file system,
##  uncomment the following entry and set it to that domain.
#FILESYSTEM_DOMAIN	= your.domain

##  Do you want to use NFS for file access instead of remote system
##  calls?
USE_NFS			= False

##  Do your machines run AFS?
HAS_AFS			= False

##  Do you want to use AFS for file access instead of remote system
##  calls?
USE_AFS			= False

##  Pathnames to various AFS tools that condor needs:
FS_PATHNAME		= /usr/afsws/bin/fs
VOS_PATHNAME		= /usr/afsws/etc/vos

##--------------------------------------------------------------------
##  Checkpoint server:
##--------------------------------------------------------------------
##  Do you want to use a checkpoint server?
USE_CKPT_SERVER		= False

##  If so, what's the hostname?
#CKPT_SERVER_HOST	= checkpoint-server-hostname.your.domain

##--------------------------------------------------------------------
##  Miscellaneous:
##--------------------------------------------------------------------
##  Internet domain of machines sharing a common UID space.  If your
##  machines don't share a common UID space, leave this commented
##  out.
#UID_DOMAIN		= your.domain

##  Try to save this much swap space by not starting new shadows.  
##  Specified in megabytes.
RESERVED_SWAP		= 15

##  What's the maximum number of jobs you want a single submit machine
##  to spawn shadows for?
MAX_JOBS_RUNNING	= 200

##  Condor needs to create a few lock files to syncronize access to
##  various log files.  Because of problems we've had with network
##  filesystems and file locking over the years, we HIGHLY recomend
##  that you put these lock files on a local partition on each
##  machine.  If you don't have your LOCAL_DIR on a local partition,
##  be sure to change this entry.  Whatever user (or group) condor is
##  running as needs to have write access to this directory.  If
##  you're not running as root, this is whatever user you started up
##  the condor_master as.  If you are running as root, and there's a
##  condor account, it's probably condor.  Otherwise, it's whatever
##  you've set in the CONDOR_IDS environment variable.  See the Admin
##  manual for details on this.
LOCK		= $(LOCAL_DIR)/log

##  Should the master allow the "admin commands": on, off, restart,
##  and reconfig?
ALLOW_ADMIN_COMMANDS            = True


##--------------------------------------------------------------------
##  Settings that control the daemon's debuging output:
##--------------------------------------------------------------------
MAX_COLLECTOR_LOG	= 64000
COLLECTOR_DEBUG		=

MAX_KBDD_LOG		= 64000
KBDD_DEBUG		=

MAX_NEGOTIATOR_LOG	= 64000
NEGOTIATOR_DEBUG	=

MAX_SCHEDD_LOG		= 64000
SCHEDD_DEBUG		=

MAX_SHADOW_LOG		= 64000
SHADOW_DEBUG		=

MAX_STARTD_LOG		= 64000
STARTD_DEBUG		= D_COMMAND

MAX_STARTER_LOG		= 64000
STARTER_DEBUG		= D_NODATE

MAX_MASTER_LOG		= 64000
MASTER_DEBUG		= D_COMMAND
##  When the master starts up, should it truncate it's log file?
TRUNC_MASTER_LOG_ON_OPEN        = False


######################################################################
######################################################################
##  Settings control the policy for running, stopping, and
##  periodically checkpointing condor jobs:
######################################################################
######################################################################

##  These macros are here to help write legible expressions:
MINUTE		= 60
HOUR		= (60 * $(MINUTE))
StateTimer	= (CurrentTime - EnteredCurrentState)
ActivityTimer	= (CurrentTime - EnteredCurrentActivity)
##  The JobUniverse attribute is just an int.  These macros can be
##  used to specify the universe in a human-readable way:
STANDARD	= 1
PVM		= 4
VANILLA		= 5

NonCondorLoadAvg	= (LoadAvg - CondorLoadAvg)
BackgroundLoad		= 0.3
HighLoad		= 0.5
StartIdleTime		= 15 * $(MINUTE)
ContinueIdleTime	= 5 * $(MINUTE)
MaxSuspendTime		= 10 * $(MINUTE)
MaxVacateTime		= 5 * $(MINUTE)

KeyboardBusy		= KeyboardIdle < $(MINUTE)
CPU_Idle		= $(NonCondorLoadAvg) <= $(BackgroundLoad)
CPU_Busy		= $(NonCondorLoadAvg) >= $(HighLoad)

WANT_SUSPEND		: True
WANT_VACATE 		: True
WANT_SUSPEND_VANILLA	: True
WANT_VACATE_VANILLA	: True

START		: $(CPU_Idle) && KeyboardIdle > $(StartIdleTime)
SUSPEND		: $(CPU_Busy) || $(KeyboardBusy)
CONTINUE	: $(CPU_Idle) && KeyboardIdle > $(ContinueIdleTime)
VACATE		: $(ActivityTimer) > $(MaxSuspendTime)
KILL		: $(ActivityTimer) > $(MaxVacateTime)
SUSPEND_VANILLA		: $(CPU_Busy) || $(KeyboardBusy)
CONTINUE_VANILLA	: $(CPU_Idle) && KeyboardIdle > $(ContinueIdleTime)
VACATE_VANILLA		: $(ActivityTimer) > $(MaxSuspendTime)
KILL_VANILLA		: $(ActivityTimer) > $(MaxVacateTime)

##
##  Periodic Checkpointing
LastCkpt	= (CurrentTime - LastPeriodicCheckpoint)
PERIODIC_CHECKPOINT	: ( (image_size < 60000) && ( $(LastCkpt) > (6 * $(HOUR)) ) ) || ( $(LastCkpt) > (12 * $(HOUR)) )


######################################################################
######################################################################
##  Settings you should probably leave alone:
##  (unless you know what you're doing)
######################################################################
######################################################################

######################################################################
##  Daemon-wide settings:
######################################################################

##  What names do you want to use to specify this platform?
ARCH		= INTEL
OPSYS		= LINUX

##  Pathnames
LOG		= $(LOCAL_DIR)/log
SPOOL		= $(LOCAL_DIR)/spool
EXECUTE		= $(LOCAL_DIR)/execute
BIN		= $(RELEASE_DIR)/bin
LIB		= $(RELEASE_DIR)/lib
SBIN		= $(RELEASE_DIR)/sbin
HISTORY		= $(SPOOL)/history

##  Log files
COLLECTOR_LOG	= $(LOG)/CollectorLog
KBDD_LOG	= $(LOG)/KbdLog
MASTER_LOG	= $(LOG)/MasterLog
NEGOTIATOR_LOG	= $(LOG)/NegotiatorLog
SCHEDD_LOG	= $(LOG)/SchedLog
SHADOW_LOG	= $(LOG)/ShadowLog
STARTD_LOG	= $(LOG)/StartLog
STARTER_LOG	= $(LOG)/StarterLog

##  Lock files
USERLOG_LOCK	= $(LOCK)/ULogLock
SCHEDD_LOCK	= $(LOCK)/SchedLock
SHADOW_LOCK	= $(LOCK)/ShadowLock

##  In most cases, your condor_collector and condor_negotiator are 
##  going to run on the same machine.  If for some reason, this isn't 
##  the case, here's where you'd change it:
COLLECTOR_HOST	= $(CONDOR_HOST)
NEGOTIATOR_HOST	= $(CONDOR_HOST)

##  How long are you willing to let daemons try their graceful
##  shutdown methods before they do a hard shutdown? (30 minutes)
SHUTDOWN_GRACEFUL_TIMEOUT	= 1800

##  ??
RESERVE_AFS_CACHE	= False

##  ??
##  Specified in megabytes
RESERVED_DISK		= 5


######################################################################
##  Daemon-specific settings:
######################################################################

##--------------------------------------------------------------------
##  condor_master
##--------------------------------------------------------------------
##  Daemons you want the master to keep running for you:
DAEMON_LIST			= MASTER, STARTD, SCHEDD

##  Where are the binaries for these daemons?
MASTER				= $(SBIN)/condor_master
STARTD				= $(SBIN)/condor_startd
SCHEDD				= $(SBIN)/condor_schedd

##  When the master starts up, it can place it's address (ip and port)
##  into a file.  This way, tools running on the local machine don't
##  need to query the central manager to find the master.
MASTER_ADDRESS_FILE = $(LOG)/.master_address

##  Where should the master find the condor_preen binary and how do
##  you want preen to behave?  The "-m" means you want email about
##  files preen finds that it thinks it should remove.  The "-r" means
##  you want preen to actually remove these files.  If you don't want
##  preen to run at all, just comment out this setting.
PREEN				= $(SBIN)/condor_preen -m -r

##  How often should the master start up condor_preen? (once a day)
PREEN_INTERVAL			= 86400

##  If a daemon dies an unnatural death, do you want email about it?
PUBLISH_OBITUARIES              = True

##  If you're getting obituaries, how many lines of the end of that
##  daemon's log file do you want included in the obituary?
OBITUARY_LOG_LENGTH             = 20

##  Should the master run?
START_MASTER                    = True

##  Should the master start up the daemons you want it to?
START_DAEMONS                   = True

##  How often do you want the master to send an update to the central
##  manager? 
MASTER_UPDATE_INTERVAL          = 300

##  How often do you want the master to check the timestamps of the
##  daemons it's running?  If any daemons have been modified, the
##  master restarts them.
MASTER_CHECK_NEW_EXEC_INTERVAL  = 300

##  Once you notice new binaries, how long should you wait before you
##  try to execute them?
MASTER_NEW_BINARY_DELAY		= 30

##  What's the maximum amount of time you're willing to give the
##  daemons to quickly shutdown before you just kill them outright?
SHUTDOWN_FAST_TIMEOUT           = 120

######
##  Exponential backoff settings:
######
##  When a daemon keeps crashing, we use "exponential backoff" so we
##  wait longer and longer before restarting it.  This is the base of
##  the exponent used to determine how long to wait before starting
##  the daemon again:
MASTER_BACKOFF_FACTOR		= 2.0

##  What's the maximum amount of time you want the master to wait
##  between attempts to start a given daemon?  (With 2.0 as the
##  MASTER_BACKOFF_FACTOR, you'd hit 1 hour in 12 restarts...)
MASTER_BACKOFF_CEILING          = 3600

##  How long should a daemon run without crashing before we consider
##  it "recovered".  Once a daemon has recovered, we reset the number
##  of restarts so the exponential backoff stuff goes back to normal. 
MASTER_RECOVER_FACTOR           = 300


##--------------------------------------------------------------------
##  condor_startd
##--------------------------------------------------------------------
##  Where are the various condor_starter binaries installed?
STARTER			= $(SBIN)/condor_starter
ALTERNATE_STARTER_1	= $(SBIN)/condor_starter.carmi
ALTERNATE_STARTER_2	= $(SBIN)/condor_starter

##  When the startd starts up, it can place it's address (ip and port)
##  into a file.  This way, tools running on the local machine don't
##  need to query the central manager to find the startd.
STARTD_ADDRESS_FILE	= $(LOG)/.startd_address

##  When a machine is claimed, how often should we poll the state of
##  the machine to see if we need to evict/suspend the job, etc?
POLLING_INTERVAL        = 5

##  How often should the startd send updates to the central manager? 
UPDATE_INTERVAL         = 300

##  How long is the startd willing to stay in the "matched" state?
MATCH_TIMEOUT		= 300

##  How long is the startd willing to stay in the preempting/killing
##  state before it just kills the starter directly?
KILLING_TIMEOUT		= 30

##  When a machine unclaimed, when should it run benchmarks?
##  LastBenchmark is initialized to 0, so this expression says as soon
##  as we're unclaimed, run the benchmarks.  Thereafter, if we're
##  unclaimed and it's been at least 4 hours since we ran the last
##  benchmarks, run them again.  The startd keeps a weighted average
##  of the benchmark results to provide more accurate values.
BenchmarkTimer = (CurrentTime - LastBenchmark)
RunBenchmarks : (LastBenchmark == 0 ) || ($(BenchmarkTimer) >= (4 * $(HOUR)))

##  Normally, when the startd is computing the idle time of all the
##  users of the machine (both local and remote), it checks the utmp
##  file to find all the currently active ttys, and only checks access
##  time of the devices associated with active logins.  Unfortunately,
##  on some systems, utmp is unreliable, and the startd might miss
##  keyboard activity by doing this.  So, if your utmp is unreliable,
##  set this setting to True and the startd will check the access time
##  on all tty and pty devices.
#STARTD_HAS_BAD_UTMP = False

##  This entry allows the startd to monitor console (keyboard and
##  mouse) activity by checking the access times on special files in
##  /dev.  Activity on these files shows up as "ConsoleIdle" time in
##  the startd's ClassAd.  Just give a comma-seprated list of the
##  names of devices you want considered the console, without the
##  "/dev/" portion of the pathname.
#CONSOLE_DEVICES = mouse, console

##  This entry allows you to have the startd advertise arbitrary
##  expressions from the config file in its ClassAd.  Give the
##  comma-seperated list of entries from the config file you want in
##  the startd classad.  Note: because of the different syntax of the
##  config file and ClassAds, you might have to do a little extra work
##  to get a given entry into the ClassAd.  In particular, ClassAds
##  require "'s around your strings.  Numeric values can go in
##  directly, as can boolean expressions.  For example, if you wanted
##  the startd to advertise its list of console devices, when it's
##  configured to run benchmarks, and how often it sends updates to
##  the central manager, you'd have to do the following:
#MY_CONSOLE_DEVICES = "$(CONSOLE_DEVICES)"
#STARTD_EXPRS = MY_CONSOLE_DEVICES, RunBenchmarks, UPDATE_INTERVAL

##  When the startd is claimed by a remote user, it can also advertise
##  arbitrary attributes from the classad of the job its working on.
##  Just list the attribute names you want advertised.  Note: since
##  this is already a ClassAd, you don't have to do anything funny
##  with strings, etc.
STARTD_JOB_EXPRS = ImageSize, JobUniverse


##--------------------------------------------------------------------
##  condor_schedd
##--------------------------------------------------------------------
##  Where are the various shadow binaries installed?
SHADOW			= $(SBIN)/condor_shadow
SHADOW_PVM		= $(SBIN)/condor_shadow.carmi

##  When the schedd starts up, it can place it's address (ip and port)
##  into a file.  This way, tools running on the local machine don't
##  need to query the central manager to find the schedd.
SCHEDD_ADDRESS_FILE	= $(LOG)/.schedd_address

##  How often should the schedd send an update to the central manager?
##  (5 minutes)
SCHEDD_INTERVAL		= 300 

##  How long should the schedd wait between spawning each shadow?
JOB_START_DELAY		= 2

##  How often should the schedd send a keep alive message to any
##  startds it has claimed?  (5 minutes)
ALIVE_INTERVAL		= 300

##  Estimated virtual memory size of each condor_shadow process. 
##  Specified in kilobytes.
SHADOW_SIZE_ESTIMATE	= 1800

##  The condor_schedd can renice the condor_shadow processes on your
##  submit machines.  How how "nice" do you want the shadows? (0-20)
SHADOW_RENICE_INCREMENT	= 10

######
## Queue management settings:
######
##  How often should the schedd truncate it's job queue transation
##  log?  (once a day)
QUEUE_CLEAN_INTERVAL	= 86400

##  Do you want to allow remote machines to be able to submit jobs to
##  this queue as user "nobody"?
ALLOW_REMOTE_SUBMIT	= False

##  What users do you want to grant super user access to this job
##  queue?  (These users will be able to remove other user's jobs). 
QUEUE_SUPER_USERS	= root, condor


##--------------------------------------------------------------------
##  condor_shadow.carmi
##--------------------------------------------------------------------
##  Where is the condor pvm daemon installed?
PVMD			= $(SBIN)/condor_pvmd

## ??
PROC_TIMEOUT		= 180

## ??
HOST_TIMEOUT		= 180


##--------------------------------------------------------------------
##  condor_starter
##--------------------------------------------------------------------
##  Should the starter do local logging to its own log file, or send
##  debug information back to the condor_shadow where it will end up
##  in the ShadowLog?
STARTER_LOCAL_LOGGING	= TRUE


##--------------------------------------------------------------------
##  condor_starter.carmi
##--------------------------------------------------------------------
## ??
TRANSFER_BLOCK_SIZE	= 8192

## ??
MIN_CKPT_INTERVAL	= 1800

## ??
MAX_CKPT_INTERVAL	= 7200

## ??
PVM_POLLING_FREQ	= 0


##--------------------------------------------------------------------
##  condor_submit
##--------------------------------------------------------------------
##  If you want condor_submit to automatically append an expression to
##  the Requirements expression or Rank expression of jobs at your
##  site, uncomment these entries.
#APPEND_REQ_VANILLA	= (expression to append to vanilla job requirements)
#APPEND_REQ_STANDARD	= (expression to append to standard job requirements)
#APPEND_RANK_STANDARD	= (expression to append to vanilla job rank)
#APPEND_RANK_VANILLA	= (expression to append to standard job rank)

##  These are default values for the rank expression that are used if
##  none are specified in the submit file.
DEFAULT_RANK_VANILLA	= ((Memory*1024) > Imagesize)
DEFAULT_RANK_STANDARD	= ((Memory*1024) > Imagesize)


##--------------------------------------------------------------------
##  condor_preen 
##--------------------------------------------------------------------
##  Who should condor_preen send email to?
PREEN_ADMIN		= $(CONDOR_ADMIN)

##  What files should condor_preen leave in the spool directory?
VALID_SPOOL_FILES	= job_queue.log, job_queue.log.tmp, history, Accountant.log

##  What files should condor_preen leave in the log directory?
VALID_LOG_FILES		= MasterLog, MasterLog.old, NegotiatorLog, NegotiatorLog.old, CollectorLog, CollectorLog.old, SchedLog, SchedLog.old, ShadowLog, ShadowLog.old, StartLog, StartLog.old, StarterLog, StarterLog.old, KbdLog, KbdLog.old, ShadowLock, ULogLock, SchedLock, CkptServerLog, CkptServerLog.old, .startd_address, .schedd_address, .master_address

