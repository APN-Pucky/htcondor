SRC_DIR = $(SRC_TREE)/condor_c++_util

#if IS_V6
WANT_V6 = -DWANT_V6
#endif

#if IS_I386_LINUX
C_PLUS_FLAGS = $(STD_C_PLUS_FLAGS) -fexternal-templates -DNEW_PROC $(WANT_V6)
TEMPLATE_FLAGS = $(STD_C_PLUS_FLAGS) -DNEW_PROC $(WANT_V6)
#elif IS_SGI_IRIX53
C_PLUS_FLAGS = $(STD_C_PLUS_FLAGS) -DNEW_PROC $(WANT_V6)
#else
C_PLUS_FLAGS = $(STD_C_PLUS_FLAGS) -fexternal-templates -DNEW_PROC $(WANT_V6)
#endif
CFLAGS = $(STD_C_FLAGS) -DNEW_PROC $(WANT_V6)

#if IS_SPARC_SUNOS41
sYSPARAM = sysparam_sun
#endif
#if IS_SUN4M_SOLARIS || IS_SUN4M_SOLARIS251
SYSPARAM = sysparam_solaris
#endif
#if IS_X86_SOLARIS || IS_X86_SOLARIS25
SYSPARAM = sysparam_solaris
#endif
#if IS_ALPHA_OSF1
SYSPARAM = sysparam_osf1
#endif
#if IS_MIPS_ULTRIX42 || IS_MIPS_ULTRIX43
SYSPARAM = sysparam_ultrix
#endif
#if IS_R6000_AIX32
SYSPARAM=sysparam_aix
#endif
#if IS_HPPAR_HPUX9
SYSPARAM = sysparam_hpux
#endif
#if IS_I386_LINUX
SYSPARAM = sysparam_linux
#endif
#if IS_SGI_IRIX53
SYSPARAM = sysparam_irix
#endif

URL_SRC = url_condor.C cbstp_url.C file_url.C http_url.C filter_url.C \
	mailto_url.C cfilter_url.C ftp_url.C include_urls.C 

URL_OBJ = url_condor.o cbstp_url.o file_url.o http_url.o filter_url.o \
	mailto_url.o cfilter_url.o ftp_url.o include_urls.o mkargv.o

SRC = state_machine_driver.C event_handler.C name_tab.C NON_POSIX.select.C \
	NON_POSIX.set_prog_env.C alarm.C string_set.C proc_obj.C alloc.C \
	filter.C directory.C my_hostname.C file_lock.C disk.C up_down.C \
	environ.C sysparam_main.C $(SYSPARAM).C afs.C subproc.C \
	carmi_context.C instantiate.C condor_query.C string_list.C \
	condor_event.C generic_query.C $(URL_SRC) get_schedd_addr.C \
	user_log.C


OBJ = state_machine_driver.o event_handler.o name_tab.o NON_POSIX.select.o \
	NON_POSIX.set_prog_env.o alarm.o string_set.o proc_obj.o alloc.o \
	filter.o directory.o my_hostname.o file_lock.o disk.o up_down.o \
	environ.o sysparam_main.o $(SYSPARAM).o afs.o subproc.o \
	carmi_context.o instantiate.o condor_query.o string_list.o \
	condor_event.o generic_query.o $(URL_OBJ) get_schedd_addr.o \
	user_log.o

#if IS_R6000_AIX32
TEST_LIBS = ../condor_util_lib/util_lib.a cplus_lib.a /usr/lib/libbsd.a
#else
TEST_LIBS = cplus_lib.a ../condor_util_lib/util_lib.a
#endif

all_target(cplus_lib.a liburl.a)

library_target( cplus_lib.a,$(OBJ))
library_target( liburl.a,$(URL_OBJ))

c_plus_target(test_locks,test_locks.o,$(TEST_LIBS))

c_plus_target(test_context, test_carmi_context.o, $(TEST_LIBS) ../condor_xdr_lib/xdr_lib.a)

c_plus_target(cat_url, cat_url.o, liburl.a SocketLib)

c_plus_target(logwrite,testLogWrite.o,$(TEST_LIBS))
c_plus_target(logread,testLogRead.o,$(TEST_LIBS))

test: test.o user_log.o
	$(CC) $(CFLAGS) -Wl,-u,_fpdata_size -o test test.o user_log.o $(TEST_LIBS)

tester: tester.o $(TEST_LIBS)
	$(CC) $(CFLAGS) -Wl,-u._fpdata_size -o tester tester.o $(TEST_LIBS)

test_afs: test_afs.o afs.o $(TEST_LIBS)
	$(CC) $(CFLAGS) -Wl,-u,_fpdata_size -o test_afs test_afs.o afs.o $(TEST_LIBS)
clean::
	rm -f test_afs

test_subproc: test_subproc.o subproc.o
	$(CC) $(CFLAGS) -Wl,-u,_fpdata_size -o test_subproc test_subproc.o subproc.o $(TEST_LIBS)
clean::
	rm -f test_subproc

foo: foo.o user_log.o
	$(CC) $(CFLAGS) -Wl,-u,_fpdata_size -o foo foo.o user_log.o $(TEST_LIBS)

tags_target($(SRC),$(NULL))
depend_target($(SRC))
IMPORT_LINKS = ../../config/import_links
import(../condor_util_lib, mkargv.o)

release:

foo.o: user_log.h
test.o: user_log.h
