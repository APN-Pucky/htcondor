#! /usr/bin/env perl
use CondorTest;

$cmd = 'job_core_plus_sched.cmd';
$testname = 'Condor_submit correctly places attributes into JobAd - scheduler U';

my $alreadydone=0;
my $foundcount=0;

$success = sub 
{
	my %info = @_;
	my $cluster = $info{"cluster"};
	my $job     = $info{"job"};
};

$died = sub 
{
	my %info = @_;
	my $expectedsig = $info{"job"}+1;
	my $gotsig      = $info{"signal"};
	my $error 		= $info{"error"};
};


$submit = sub 
{
	my %args = @_;
	my $cluster = $args{"cluster"};

	# avoid reentrant death
	if($alreadydone != 0) 
	{
		return true;
	} 
	else 
	{
		$alreadydone = 1;
	}

	system("condor_config_val -config");
	print "Checking Job Ads for $cluster\n";
	my @adarray;
	my $status = 1;
	my $cmd = "condor_q -l $cluster";
	$status = CondorTest::runCondorTool($cmd,\@adarray,2);
	if(!$status)
	{
		print "Test failure due to Condor Tool Failure<$cmd>\n";
		exit(1)
	}
	foreach $name (@adarray)
	{
		#print "job_core_plus_sched: $name\n";

		if( $name =~ /^foo\s*=\s*"(.*)"\s*$/)
		{
			print "************** $1 ************\n";
			$foundcount += 1;
		}
		elsif( $name =~ /^bar\s*=\s*"(.*)"\s*$/)
		{
			print "************** $1 ************\n";
			$foundcount += 1;
		}
		elsif( $name =~ /^last\s*=\s*"(.*)"\s*$/)
		{
			print "************** $1 ************\n";
			$foundcount += 1;
		}
		elsif( $name =~ /^done\s*=\s*(.*)\s*$/)
		{
			print "************** $1 ************\n";
			$foundcount += 1;
		}
	}
	$status = CondorTest::runCondorTool("condor_rm $cluster",\@adarray,2);
	print "Expect to see 4 attributes {foo,bar,last and done}\n";
	die "Missed some attributes" unless $foundcount == 4;
	if(!$status)
	{
		print "Test failure due to Condor Tool Failure<$cmd>\n";
		exit(1)
	}
	exit(0);
};

CondorTest::RegisterSubmit($testname, $submit);
CondorTest::RegisterExitedFailure( $testname, $died );
CondorTest::RegisterExitedSuccess( $testname, $success );

if( CondorTest::RunTest($testname, $cmd, 0) ) {
	print "$testname: SUCCESS\n";
	exit(0);
} else {
	die "$testname: CondorTest::RunTest() failed\n";
}

