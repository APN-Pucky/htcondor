#! /usr/bin/env perl
use CondorTest;
use CondorPersonal;

CondorPersonal::DebugOff();
Condor::DebugOff();

$param_template = "x_param.protocol-fs.template";
$testname = 'lib_auth_protocol-fs - Security Protocol FS Authentication Test';
$corename = "lib_auth_protocol-fs";
$mytestnegotiation = "x_secneg_clR_dmnR_secprepostsrc";
$mytestnegotiation_result = "yes";
$mycmdfile = "lib_auth_protocol-fs.cmd";


# where am I running
$dummyhost = "gamgee.cs.wisc.edu";
$currenthost = `hostname`;
chomp($currenthost);

system("date");
print "Dummyhost was $dummyhost and really running on $currenthost\n";

$pid = $$;
$mypid = $pid;
$myvariation = 1;
$mysaveme = $corename . ".saveme";
system("mkdir $mysaveme");

	#print "$line\n";
	$myparamname = $corename . $mypid . ".param";
	$mysubmitnm = $corename . $mypid . ".cmd";
	$mysubmitnmout = $corename . $mypid . ".cmd.out";
	$mysubmitnmlog = $corename . $mypid . ".log";
	$mysubmitnmout = $corename . $mypid . ".log";
	$mycorenm = $corename . ".cmd";
	$mycorenmout = $corename . ".cmd.out";
	$mycorenmlog = $corename . ".log";

	print "Master PID is $mypid\n";
	print "Master PID submit file is $mysubmitnm\n";

	# Edit submit file to submit to scheduler at securitypool (side b) schedd.
	my $line;
	open(CSUB,">$myparamname") || die "Can't open new submit file $myparamname: $!\n";
	open(TPLATE,"<$param_template") || die "Can't open param template $param_template: $!\n";
	while(<TPLATE>)
	{
		chomp($_);
		$line = $_;
		if( $line =~ /^\s*secprepostsrc\s*=\s*.*$/ )
		{
			print "Setting up for $mytestnegotiation\n";
			print CSUB "secprepostsrc = $mytestnegotiation\n";
		}
		else
		{
			print "template: $line\n";
			print CSUB "$line\n";
		}
	}
	close(TPLATE);
	close(CSUB);
	sleep 10;

	#my $configsec = CondorPersonal::DebugOn();
	my $configsec = CondorPersonal::StartCondor($myparamname ,"protocol", $mypid);
	my @securitypool = split /:/, $configsec;
	my $secconfig = shift @securitypool;
	my $secport = shift @securitypool;

	print "---security config is $secconfig and securitypool port is $secport---\n";
	

	$ENV{CONDOR_CONFIG} = $secconfig;
	# submit into local schedd (side a)

	print "Calling lib_auth_protocol job is  $result\n";
	my $result = system("./x_lib_auth_protocol.pl $mypid \"protocol\" $mytestnegotiation_result $mycmdfile");
	print "Result of crafted lib_auth_protocol job is  $result\n";

	system("cp -r $mypid $mysaveme");
	system("cp *$corename* $mysaveme");
	
	if( -e "$mysubmitnm" )
	{
		system("cp $mysubmitnm $mycorenm");
	}

	if( -e "$mysubmitnmout" )
	{
		system("cp $mysubmitnmout $mycorenmout");
	}

	if( -e "$mysubmitnmlog" )
	{
		system("cp $mysubmitnmlog $mycorenmlog");
	}

	my @adarray;
	my $status = 1;
	my $cmd = "condor_off -master";
	$status = CondorTest::runCondorTool($cmd,\@adarray,2);
	if(!$status)
	{
		print "Test failure due to Condor Tool Failure<$cmd>\n";
		exit(1)
	}

	if(!$status)
	{
		print "Test failure due to Condor Tool Failure<$cmd>\n";
		exit(1)
	}

system("date");

if( $result != 0 )
{
	# actual test failed but we allowed cleanup
	exit(1);
}

