#! /usr/bin/env perl
##**************************************************************
##
## Copyright (C) 1990-2007, Condor Team, Computer Sciences Department,
## University of Wisconsin-Madison, WI.
## 
## Licensed under the Apache License, Version 2.0 (the "License"); you
## may not use this file except in compliance with the License.  You may
## obtain a copy of the License at
## 
##    http://www.apache.org/licenses/LICENSE-2.0
## 
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
##**************************************************************

use CondorTest;

$cmd = 'cmd_q_shows-cputime.cmd';
$cmdout = $cmd . ".out";
$testname = 'cmd_q_shows-cputime  ';

@adarray;

$submit = sub {
	my %info = @_;
	my $cmd = "condor_q -cputime ";

	$cmdstatus = CondorTest::runCondorTool($cmd,\@adarray,2);
	if(!$cmdstatus)
	{
		CondorTest::debug("Test failure due to Condor Tool Failure<$cmd>\n",1);
		exit(1)
	}

	my $submitline = "";
	my $cluster = "";

	open(CMD, "<$cmdout") || die "Can not find submit output:$!\n";;
	while(<CMD>) {
		chomp($_);
		$submitline = $_;
		if($submitline =~ /^.*cluster\s+(\d+).*$/) {
			$cluster = $1;
			CondorTest::debug("Found my cluster which is $cluster!\n",1);
		}
		CondorTest::debug("$_\n",1);
	}

	$cmd = "condor_rm $cluster";

	foreach $line (@adarray) {
		chomp($line);
		if($line =~ /^\s*ID\s+OWNER\s+SUBMITTED\s+CPU_TIME\s+ST\s+PRI\s+SIZE\s+CMD\s*$/) {
				CondorTest::debug("Bingo\n",1);
				$cmdstatus = CondorTest::runCondorTool($cmd,\@adarray,8);
				return(0);
		} else {
			CondorTest::debug("<<<$line>>>\n",1);
			#$cmdstatus = CondorTest::runCondorTool($cmd,\@adarray,8);
			#exit(1)
		}
	}

	$cmdstatus = CondorTest::runCondorTool($cmd,\@adarray,8);
	exit(1);
};

$aborted = sub {
	CondorTest::debug("If all is good we abort our own job.......\n",1);
	exit(0);
};

$ExitSuccess = sub {
	my %info = @_;
};

CondorTest::RegisterAbort($testname, $aborted);
CondorTest::RegisterSubmit($testname, $submit);
CondorTest::RegisterExitedSuccess( $testname, $ExitSuccess );

if( CondorTest::RunTest($testname, $cmd, 0) ) {
	CondorTest::debug("$testname: SUCCESS\n",1);
	exit(0);
} else {
	die "$testname: CondorTest::RunTest() failed\n";
}


