#! /usr/bin/env perl
##**************************************************************
##
## Copyright (C) 1990-2007, Condor Team, Computer Sciences Department,
## University of Wisconsin-Madison, WI.
## 
## Licensed under the Apache License, Version 2.0 (the "License"); you
## may not use this file except in compliance with the License.  You may
## obtain a copy of the License at
## 
##    http://www.apache.org/licenses/LICENSE-2.0
## 
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
##**************************************************************

# Tests gittrac #4727: Submit failures + retries + final node + rescue +
# recov = hung DAGMan

use CondorTest;
use CondorUtils;

$cmd = 'job_dagman_gt4727-upper.dag';
$testdesc =  'Condor submit dag - test gittrac #4727 - scheduler U';
$testname = "job_dagman_gt4727";
$dagman_args = "-verbose";

@outfiles = ("job_dagman_gt4727-lower.dag.status",
	"job_dagman_gt4727-upper.dag.status",
	"job_dagman_gt4727-lower.dag.jobstate.log",
	"job_dagman_gt4727-upper.dag.jobstate.log",
	"job_dagman_gt4727-lower.dag.dagman.out",
	"job_dagman_gt4727-upper.dag.dagman.out");

my $killedchosen = 0;

# truly const variables in perl
sub IDLE{1};
sub HELD{5};
sub RUNNING{2};

# Get rid of any existing output files.
foreach $ofile (@outfiles) {
	if (-e $ofile) {
		runcmd("rm -f $ofile");
	}
}

$abnormal = sub 
{
	die "Error: Want to see only submit, execute and successful completion\n";
};

$aborted = sub 
{
	die "Error: Abort event NOT expected\n";
};

$held = sub 
{
	die "Error: Held event NOT expected\n";
};

$executed = sub
{
	my %info = @_;

	CondorTest::debug("Good. We need the dag to run<$info{cluster}>\n",1);
};

$submitted = sub
{
	CondorTest::debug("submitted: This test will see submit, executing and successful completion\n",1);
};

$success = sub
{
	CondorTest::debug("executed successfully\n",1);
	CondorTest::debug("Verifying output\n",1);
	$diditpass = 1;

	#TEMPTEMP -- check for node status files, jobstate.log files, rescue files? here
	# Check for expected output files.
	foreach $ofile (@outfiles) {
		if (! -e $ofile) {
			CondorTest::debug("ERROR: missing expected output file $ofile\n");
			$diditpass = 0;
		}
	}

	if($diditpass == 0) {
		die "Error: All expected files and correct output failed\n";
	}
};

$failure = sub
{
	die "Error: DAG is not expected to fail!\n";
};

CondorTest::RegisterExitedSuccess( $testname, $success);
CondorTest::RegisterExitedFailure( $testname, $failure );
CondorTest::RegisterExecute($testname, $executed );
CondorTest::RegisterExitedAbnormal( $testname, $abnormal );
CondorTest::RegisterAbort( $testname, $aborted );
CondorTest::RegisterHold( $testname, $held );
CondorTest::RegisterSubmit( $testname, $submitted );

if( CondorTest::RunDagTest($testname, $cmd, 0, $dagman_args) ) {
	CondorTest::debug("$testname: SUCCESS\n",1);
	exit(0);
} else {
	die "Error: $testname: CondorTest::RunTest() failed\n";
}

