#! /usr/bin/env perl
use CondorTest;

$cmd = 'cmd_q_shows-sub.cmd';
$cmdout = $cmd . ".out";
$testname = 'cmd_q_shows-sub  ';

$whoami = `whoami`;
chomp($whoami);

print "Looking for submitter $whoami\n";

@adarray;

$execute = sub {
	my %info = @_;
	print "Good we need to run to see it\n";
	print "Looking for submitter $whoami\n";

	# give it 5 minutes or die.
	CondorTest::RegisterTimed($testname, $timed, 300);
	my $cmd = "condor_q ";

	$cmdstatus = CondorTest::runCondorTool($cmd,\@adarray,2);
	if(!$cmdstatus)
	{
		print "Test failure due to Condor Tool Failure<$cmd>\n";
		exit(1)
	}

	my $submitline = "";
	my $cluster = "";

	open(CMD, "<$cmdout") || die "Can not find submit output:$!\n";;
	while(<CMD>) {
		chomp($_);
		$submitline = $_;
		if($submitline =~ /^.*cluster\s+(\d+).*$/) {
			$cluster = $1;
			print "Found my cluster which is $cluster!\n";
		}
		print "$_\n";
	}

	foreach $line (@adarray) {
		chomp($line);
		if($line =~ /^\s*(\d+).\d+\s+([\w\-]+).*$/) {
				$whoami = $2;
				print "Determined who I am <$whoami>\n";
		}
	}

	$cmd = "condor_q -sub $whoami ";

	$cmdstatus = CondorTest::runCondorTool($cmd,\@adarray,2);
	if(!$cmdstatus)
	{
		print "Test failure due to Condor Tool Failure<$cmd>\n";
		system("condor_rm $cluster"); # bail but pull job which never dies...
		exit(1)
	}

	foreach $line (@adarray) {
		chomp($line);

		if($line =~ /^\s*(\d+).\d+\s+([\w\-]+).*$/) {
			if(($cluster eq $1) && ($whoami eq $2)){
				print "condor_q -sub $whoami found my job matching $cluster\n";
				$cmd = "condor_rm $cluster";
				$cmdstatus = CondorTest::runCondorTool($cmd,\@adarray,8);
				return(0);
			}
		}
	}
};

$aborted = sub {
	print "If all is good we abort our own job.......\n";
	exit(0);
};

$ExitSuccess = sub {
	my %info = @_;
};

$timed = sub
{
    die "Job should have ended by now. condor_q -sub $whoami broken!\n";
};

CondorTest::RegisterAbort($testname, $aborted);
CondorTest::RegisterExecute($testname, $execute);
CondorTest::RegisterExitedSuccess( $testname, $ExitSuccess );

if( CondorTest::RunTest($testname, $cmd, 0) ) {
	print "$testname: SUCCESS\n";
	exit(0);
} else {
	die "$testname: CondorTest::RunTest() failed\n";
}


