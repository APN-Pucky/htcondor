#! /usr/bin/env perl
use CondorTest;
use CondorPersonal;

CondorPersonal::DebugOff();
Condor::DebugOff();

$cmd_template = "job_condorc_ab_van.template";
$testname = 'job_condorc_ab_van - Simple Condor-C A&B with Vanilla job';
$corename = "job_condorc_ab_van";

# where am I running
$dummyhost = "gamgee.cs.wisc.edu";
$currenthost = `hostname`;
CondorTest::fullchomp($currenthost);
CondorPersonal::DebugOn();

system("date");
print "Dummyhost was $dummyhost and really running on $currenthost\n";

$mypid = $$;
$mysaveme = $corename . ".saveme";
system("mkdir $mysaveme");

$mysubmitnm = $corename . $mypid . ".cmd";
$mysubmitnmout = $corename . $mypid . ".cmd.out";
$mysubmitnmlog = $corename . $mypid . ".log";
$mysubmitnmout = $corename . $mypid . ".log";
$mycorenm = $corename . ".cmd";
$mycorenmout = $corename . ".cmd.out";
$mycorenmlog = $corename . ".log";

print "Master PID is $mypid\n";
print "Master PID submit file is $mysubmitnm\n";

# my $configrem = CondorPersonal::DebugOn();
# get a remote scheduler running (side b)
my $configrem = CondorPersonal::StartCondor("x_param.condorcremote" ,"remote");
my @remote = split /\+/, $configrem;
my $remconfig = shift @remote;
my $remport = shift @remote;

print "---Remote config is $remconfig and remote port is $remport---\n";

# Edit submit file to submit to scheduler at remote (side b) schedd.
my $line;
open(CSUB,">$mysubmitnm") || die "Can't open new submit file $mysubmitnm: $!\n";
open(TPLATE,"<$cmd_template") || die "Can't open submit file template $cmd_template: $!\n";
while(<TPLATE>)
{
	CondorTest::fullchomp($_);
	$line = $_;
	if( $line =~ /^\s*remote_pool\s*=\s*($dummyhost):\s*(\d+)\s*$/ )
	{
		print "remote pool is $currenthost:$remport\n";
		print CSUB "remote_pool = $currenthost:$remport\n";
	}
	elsif( $line =~ /^\s*remote_schedd\s*=.*$/ )
	{
		my $schedd = "schedd$mypid" . "remote\@$currenthost";
		print CSUB "remote_schedd = $schedd\n";
	}
	elsif( $line =~ /^\s*(.*)$dummyhost(.*)\s*$/)
	{
		print "found $dummyhost and subbing $currenthost\n";
		print CSUB "$1$currenthost$2\n";
	}
	elsif( $line =~ /^\s*log\s*= .*$/)
	{
		my $lognm = $mysubmitnmlog;
		print "New log name: $lognm\n"; 
		print CSUB "log = $lognm\n";
	}
	else
	{
		print "template: $line\n";
		print CSUB "$line\n";
	}
}
close(TPLATE);
close(CSUB);
sleep 10;

# get a local scheduler running (side a)
my $configloc = CondorPersonal::StartCondor("x_param.condorclocal" ,"local");
my @local = split /\+/, $configloc;
my $locconfig = shift @local;
my $locport = shift @local;

print "---local config is $locconfig and local port is $locport---\n";

$ENV{CONDOR_CONFIG} = $locconfig;
# submit into local schedd (side a)

if( ! -e "job_condorc_xxx_van.in" )
{
	system("date > job_condorc_xxx_van.in");
}

print "Looking for schedds at B remote point of AB - Condor-C\n";
system("condor_status -pool $currenthost:$remport -schedd -format '%s\n' Name");

my $result = system("./job_condorc_ab_van.pl $mysubmitnm");
print "Result of crafted Condor-C job is  $result\n";

system("cp -r $mypid $mysaveme");
system("cp *condorc* $mysaveme");

if( -e "$mysubmitnm" )
{
	system("cp $mysubmitnm $mycorenm");
}

if( -e "$mysubmitnmout" )
{
	system("cp $mysubmitnmout $mycorenmout");
}

if( -e "$mysubmitnmlog" )
{
	system("cp $mysubmitnmlog $mycorenmlog");
}

my @adarray;
my $status = 1;
my $cmd = "condor_off -master";
$status = CondorTest::runCondorTool($cmd,\@adarray,2);
if(!$status)
{
	print "Test failure due to Condor Tool Failure<$cmd>\n";
	exit(1)
}

$ENV{CONDOR_CONFIG} = $remconfig;
$status = 1;
$cmd = "condor_off -master";
$status = CondorTest::runCondorTool($cmd,\@adarray,2);
if(!$status)
{
	print "Test failure due to Condor Tool Failure<$cmd>\n";
	exit(1)
}
system("date");

if( $result != 0 )
{
	# actual test failed but we allowed cleanup
	exit(1);
}

