#! /usr/bin/env perl
##**************************************************************
##
## Copyright (C) 1990-2007, Condor Team, Computer Sciences Department,
## University of Wisconsin-Madison, WI.
## 
## Licensed under the Apache License, Version 2.0 (the "License"); you
## may not use this file except in compliance with the License.  You may
## obtain a copy of the License at
## 
##    http://www.apache.org/licenses/LICENSE-2.0
## 
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
##**************************************************************

use CondorTest;
use CondorPersonal;


# truly const variables in perl
sub IDLE{1};
sub HELD{5};
sub RUNNING{2};

$testname = 'cmd_status_shows-help';
$corename = "cmd_status_shows-help";

# where am I running
$currenthost = CondorTest::getFqdnHost();
chomp($currenthost);
$primarycollector = $currenthost;
my @adarray;

CondorTest::fullchomp($currenthost);

system("date");

$mypid = CondorPersonal::SaveMeSetup($corename);
$mysaveme = $corename . ".saveme";

if($mypid == 0) {
	die "Saveme setup for test failed\n";
}

$mysubmitnm = $corename . $mypid . ".cmd";
$mysubmitnmout = $corename . $mypid . ".cmd.out";
$mysubmitnmlog = $corename . $mypid . ".log";
$mysubmitnmout = $corename . $mypid . ".out";
$mycorenm = $corename . ".cmd";
$mycorenmout = $corename . ".cmd.out";
$mycorenmlog = $corename . ".log";

CondorTest::debug("Master PID is $mypid\n",1);
CondorTest::debug("Master PID submit file is $mysubmitnm\n",1);

my $version = "local";
# get a local scheduler running (side a)
my $configloc = CondorPersonal::StartCondor( "cmd_status_shows-help", "x_param.cmdstatus-multi" ,$version);
my @local = split /\+/, $configloc;
my $locconfig = shift @local;
my $locport = shift @local;

CondorTest::debug("---local config is $locconfig and local port is $locport---\n",1);

$primarycollector = $primarycollector . ":" . $locport;

CondorTest::debug("Primary collector for other nodes <<$primarycollector>>\n",1);

CondorTest::debug("Looking at new pool<condor_status>\n",1);

my $count = 0;
my $nattempts = 1;

while($count < $nattempts) {
	my $masterlocal = 0;
	my $mastersched = 0;
	$found1 = 0;
	$cmd = "condor_status -help";
	# forth arg places stderr into passed array
	$cmdstatus = CondorTest::runCondorTool($cmd,\@adarray,2,"usage");
    if(!$cmdstatus)
    {
        CondorTest::debug("Test failure due to Condor Tool Failure<$cmd>\n",1);
        exit(1)
    }

	CondorTest::debug("Looking at condor_status -help \n",1);

	# looking for.....  <Usage: condor_status>
	foreach $line (@adarray) {
		if($line =~ /^\s*Usage:\s+condor_status.*$/) {
			CondorTest::debug("found usage: $line\n",1);
			$done = 1;
		} else {
			CondorTest::debug("usage: $line\n",1);
		}
	}

	$count = $count + 1;
	sleep($count * 2);
}



CondorTest::debug("Saving things and cleaning up....\n",1);

system("cp *cmd_status_shows-help* $mysaveme");

if( -e "$mysubmitnm" )
{
	system("cp $mysubmitnm $mycorenm");
}

if( -e "$mysubmitnmout" )
{
	system("cp $mysubmitnmout $mycorenmout");
}

if( -e "$mysubmitnmlog" )
{
	system("cp $mysubmitnmlog $mycorenmlog");
}

CondorPersonal::KillDaemonPids($locconfig);
system("date");

if( $done == 0 )
{
	# actual test failed but we allowed cleanup
	exit(1);
}

CondorTest::debug("cmd_status_shows-help SUCCESS\n",1);
exit(0);
