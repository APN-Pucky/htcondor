#! /usr/bin/env perl
##**************************************************************
##
## Copyright (C) 1990-2007, Condor Team, Computer Sciences Department,
## University of Wisconsin-Madison, WI.
## 
## Licensed under the Apache License, Version 2.0 (the "License"); you
## may not use this file except in compliance with the License.  You may
## obtain a copy of the License at
## 
##    http://www.apache.org/licenses/LICENSE-2.0
## 
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
##**************************************************************

use CondorTest;
use CondorUtils;

$cmd = 'job_dagman_always_run_post-A.dag';
$testdesc =  'Condor DAGman test for always running the POST script - scheduler U';
$testname = "job_dagman_always_run_post-A";
$dagman_args = "-verbose";

my $killedchosen = 0;

# truly const variables in perl
sub IDLE{1};
sub HELD{5};
sub RUNNING{2};

$abnormal = sub 
{
	die "Want to see only submit, execute and successful completion\n";
};

$aborted = sub 
{
	die "Abort event NOT expected\n";
};

$held = sub 
{
	die "Held event NOT expected\n";
};

$executed = sub
{
	my %info = @_;

	CondorTest::debug("Good. We need the dag to run<$info{cluster}>\n",1);
};

$submitted = sub
{
	CondorTest::debug("submitted: This test will see submit, executing and successful completion\n",1);
};

$success = sub
{
	CondorTest::debug("executed successfully\n",1);
	CondorTest::debug("Verifying output\n",1);
	$diditpass = 1;
	# A_A.out should not exist
	$diditpass = 0 if (-e "A_A.out");
	$canopen = open(OUT,"<$testname.dag.dagman.out");
	if( ! (defined $canopen)) {
		CondorTest::debug("Could not open outfile<$testname.dag.dagman.out>:$!\n",1);
		$diditpass = 0;
	}
	my @outfile = <OUT>;
	$passed_first = 0; # Let's be optimistic
	$passed_second = 0;
	foreach (@outfile) {
		if(/PRE Script.+Job A_A failed/) {
			CondorTest::debug("Saw PRE script A_A fail correctly: $_\n",1);
			$passed_first = 1;
			last;
		}
	}
	foreach (@outfile) {
		if(/Running POST script.+A_A/) {
			CondorTest::debug("Saw POST script A_A run!\n",1);
			$passed_second = 1;
			last;
		}
	}
	close(OUT);
	if($passed_first != 1 || $passed_second != 1) {
		CondorTest::debug("failed $testname.dag.dagman.out\n",1);
		$diditpass = 0;
	}
	if($diditpass == 0) {
		die "All expected files and correct output failed\n";
	}
};

CondorTest::RegisterExitedSuccess( $testname, $success);
CondorTest::RegisterExecute($testname, $executed);
CondorTest::RegisterExitedAbnormal( $testname, $abnormal );
CondorTest::RegisterAbort( $testname, $aborted );
CondorTest::RegisterHold( $testname, $held );
CondorTest::RegisterSubmit( $testname, $submitted );

if( CondorTest::RunDagTest($testname, $cmd, 0, $dagman_args) ) {
	CondorTest::debug("$testname: SUCCESS\n",1);
	exit(0);
} else {
	die "$testname: CondorTest::RunTest() failed\n";
}
