Programs
=========
+ condor_config_bind:
  - Purpose: Dynamically bind a local configuration file into an
    already created configuration. It takes a series of configuration
    files to bind together, then creates a single configuration file
    that lists the given configuration files as local_configs.  This
    is particularly useful want to modify a configuration but can't
    actually make any changes to the global config file (even
    changing the list of local config files).
  - Usage:  condor_config_bind <-o output_file_name>
    <condor_config_file1> <condor_config_file2>
    [condor_config_file3 condor_config_file4 ...]
    [-help]

+ install_release:
  - Purpose: It installs an arbitrary software release into a named
    directory.  In addition it creates a log of the installed files for
    easy uninstallation.
  - Usage: install_release [-f] [-help] <binary_tar>
	   [-basedir base_dir] [-log log_file_name]
	   [-o other_file1 other_file2 ...]
  - Subprograms:
    + tar
    + wget
    + gzip
  - Supported Release Types
    + tar
    + gzip
    + gzip'ed tar
  - Supported File Transfer Protocols
    + mounted file system
    + http
    + ftp

+ condor_local_start
  - Purpose: Creates a local_dir directory structure for condor to run
    in (log/, spool/, execute/).  Sets required environment variables
    needed to start condor, based on the local_dir and global
    configuration file.  Dynamically binds a local configuration file
    into the already defined configuration of the current condor
    installation. Performs pre-start diagnostics to ensure all of the
    needed binaries are present.  And finally starts condor.
  - Usage: condor_local_start <condor_config_file> <release_dir>
    [-localdir local_install_dir] [-localconfig local_config_file]
    [-dyn] [-fg] [-help]
  - Subprograms:
    + condor_config_val
    + condor_config_bind
    + condor_master
   
+ condor_cold_start
  - Purpose: Start condor on a machine that has no condor
    installation on it.  Essentially, cold_start binds install_release
    and local_start together, passing information from the install
    process to the start process.  In addition, it has the
    functionality to determine the local arch if one is not
    specified. 
  - Usage: condor_cold_start [-basedir base_dir] <-configfile config_file>
    [-f] [-dyn]
    [-fg]
    [-setuponly || -runonly]
    [-arch architecture_string][-site install_repository_site]
    [-localdir local_dir] [-runlocalconfig local_config_file]
    [-help]
  - Subprograms:
    + uname
    + install_release
    + condor_local_start

+ condor_local_stop
  - Purpose: Shutsdown a locally running condor.  Unlike condor_off it
    does not need any environment set up prior to use.  It creates a
    working condor environment, including any local configs
    dynamically bound into condor by local_start.  Locates the
    required condor binaries.  Then it determines whether the it is
    safe to shut condor down (i.e, whether the schedd has any jobs in
    any status).  Finally, it calls condor_off.  Optionally, the user
    can specify to shutdown regardless of whether there are jobs in
    the Q or not.
  - Usage: condor_local_stop [-f] <condor_config_file> <release_dir>
    [-localconfig config_file] [-help]
  - Subprograms:
    + condor_q
    + condor_config_val
    + condor_config_bind
    + condor_install_local
    + condor_off

+ cleanup_release 
  - Purpose: Uninstalls a previously installed software release done
    by install_release.  It plays the install log in reverse,
    deleting the files as it goes.  Each delete is written to the
    install log to allow recovery from a crash.
  - Usage: cleanup_release [-help] <install_log>

+ condor_cold_stop
  - Purpose: Stops and uninstalls a cold_started condor.  There is
    less need for this program than for cold_start.  All it does is bind
    local_stop and cleanup into a single interface.
  - Usage: condor_cold_stop [-f] [-cleanonly || -stoponly]
    [-basedir base_dir] <-configfile condor_config_file>
    [-runlocalconfig config_file] [-log install_log][-help]
  - Subprograms
    + condor_local_stop
    + cleanup_release

+ condor_install_local
  - Purpose: Creates a local directory structure (log, spool,
    execute).  Can also extract these directories from an archive.
  - Usage: condor_install_local <-localdir local_dir>
    [-logarchive log_archive] [-spoolarchive spool_archive]
    [-execarchive exec_archive]
    [-configname config_name]
    [-f][-help]
  - Subprograms:
    + install_release (to unpack any archives)

+ condor_cleanup_local
  - Purpose: Cleanup and possibly archive local directory structure
    (log, spool, execute).  
  - Usage: condor_cleanup_local <-localdir local_dir>
    [-logarchive log_archive] [-spoolarchive spool_archive]
    [-execarchive exec_archive]
    [-help]
  - Subprograms:
    + tar
    + gzip
