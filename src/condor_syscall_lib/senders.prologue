#if defined(Solaris251)
#include <nfs/nfs.h>	
	/* 
	nfs.h defines fhandle_t.  Include before condor_common to
	avoid duplicate definitions of MIN.  However, only do this on 
	Solaris251, since in Solaris26, all the 64-bit interface stuff
	gets broken if you do this and you don't have the problem with
	MIN.  -Derek 6/24/98
	*/  
#endif

#include "condor_common.h"
#include "condor_nfs.h"
#include "condor_debug.h"
#include "condor_syscall_mode.h"
#include "condor_io.h"
#include "condor_sys.h"
#include "condor_mmap.h"
#include "condor_error.h"
#include "startup.h"
#include "syscall_param_sizes.h"

#ifdef LINK_PVM
// ClassAds needed for start_work_request used by PVM starter/shadow
#include "condor_classad.h"
#endif

static char *_FileName_ = __FILE__;

int CurrentSysCall;

extern ReliSock *syscall_sock;

int
REMOTE_syscall( int syscall_num, ... )
{
	int		scm;
	int		terrno;
	int		rval;
	sigset_t	mask, omask;
	va_list ap;
#if defined(USE_STUB_CLUMPS) || defined(IRIX)
	int keep_going = 0;
#endif

	scm = SetSyscalls( SYS_LOCAL | SYS_UNMAPPED );

	va_start( ap, syscall_num );

	// Use sigprocmask to block all signals instead of the
	// signals_control API, since the functions in that API
	// always unblock SIGTSTP and SIGUSR2, and the starter wants
	// them to remain blocked in some cases.
	sigfillset( &mask );
	sigprocmask( SIG_SETMASK, &mask, &omask );
	
	switch( syscall_num ) {

