#! /usr/bin/perl -w
use strict;

# Update the module include path
BEGIN
{
    my $Dir = $0;
    if ( $Dir =~ /(.*)\/.*/ )
    {
	push @INC, "$1";
    }
}
use HawkeyePublish;
use HawkeyeLib;
use File::Temp qw/ :mktemp /;

# Setup the hawkeye stuff
my $Hawkeye;
my %ContactStrings;
my $NumContacts = 0;
my $ProbePath;
my $GlobusLocation;
my %Fields;

# Do it
Init();
RunIt();

sub Init {
    HawkeyeLib::DoConfig( );

    $Hawkeye = HawkeyePublish->new;
    $Hawkeye->Quiet( 1 );
    $Hawkeye->AutoIndexSet( 0 );

    # Get the contact string, verify it...
    my $ContactString = HawkeyeLib::ReadConfig(  "_Contact", "" );
    if ( ( ! defined $ContactString ) || ( $ContactString eq "" )  )
    {
	$ContactString = $ENV{GLOBUS_CONTACT};
    }
    if (  ( defined $ContactString ) && ( $ContactString ne "" )  )
    {
	$ContactStrings{__default__} = $ContactString;
	$NumContacts++;
    }
    else
    {
	# Try getting a list of contacts...
	my $ContactList = HawkeyeLib::ReadConfig(  "_Contacts", "" );
	if ( ( ! defined $ContactList ) || ( $ContactList eq "" )  )
	{
	    print STDERR "No valid Globus contact string found!!\n";
	    exit 1;
	}
	# Walk through the list of contact logical names
	foreach my $Name ( split(/,/, $ContactList ) )
	{
	    my $String = 
		HawkeyeLib::ReadConfig( "_" . $Name . "_Contact", "" );
	    if ( ( ! defined $String ) || ( $String eq "" )  )
	    {
		print STDERR "Warning: No contact for $Name; ignoring\n";
		next;
	    }
	    $ContactStrings{$Name} = $String;
	    $NumContacts++;
	}
    }

    # Any contacts?
    if ( 0 == $NumContacts )
    {
	print STDERR "No valid Globus contact string found!!\n";
	exit 1;
    }

    # Condor config var
    my $Condor = HawkeyeLib::ReadConfig( "_condor_config", "" );
    if ( ( defined $Condor ) && ( $Condor ne "" )  )
    {
	$Condor =~ s/\s//g;
	$ENV{CONDOR_CONFIG} = $Condor;
    }

    # Globus location
    my $Globus = HawkeyeLib::ReadConfig( "_globus_location", "" );
    if ( ( defined $Globus ) && ( $Globus ne "" )  )
    {
	$Globus =~ s/\s//g;
	$ENV{GLOBUS_LOCATION} = $Globus;
    }
    if ( ( ! defined $ENV{GLOBUS_LOCATION} ) ||
	 ( $ENV{GLOBUS_LOCATION} eq "" ) )
    {
	print STDERR "No GLOBUS_LOCATION\n";
	exit 1;
    }
    $GlobusLocation = $ENV{GLOBUS_LOCATION};

    # Grid cert
    my $X509 = HawkeyeLib::ReadConfig( "_X509_CERT_DIR", "" );
    if ( ( defined $X509 ) && ( $X509 ne "" )  )
    {
	$X509 =~ s/\s//g;
	$ENV{X509_CERT_DIR} = $X509;
    }

    # Get the Globus path info..
    my $Path;
    $Path = HawkeyeLib::ReadConfig( "_Path", "" );
    if ( ( defined $Path ) && ( $Path ne "" )  )
    {
	$Path = $Path . ":" if ( ! $Path =~ /:$/ );
	$Path =~ s/\s//g;
	$ENV{PATH} = $Path . $ENV{PATH};
    }

    # The probe itself...
    my $Probe = HawkeyeLib::ReadConfig( "_ProbePath", "" );
    if ( ! defined $Probe )
    {
	$ProbePath = "";
    }
    else
    {
	$ProbePath = $Probe;
    }
}

# Do the real work here...
sub RunIt {

    foreach my $Contact ( keys %ContactStrings )
    {
	RunTest( $Contact, $ContactStrings{$Contact} );
    }

    # Create fields
    $Hawkeye->Store( "FIELDS" , join( " ", keys(%Fields) )  );

    # Let 'er rip!
    $Hawkeye->Publish( );
}
sub RunTest ( $$ )
{
    my $Contact = shift;
    my $ContactString = shift;

    my $Name;
    my $Label;
    if ( $Contact eq "__default__" )
    {
	$Name = "";
	$Label = "";
    }
    else
    {
	$Name = $Contact;
	$Label = "$Contact" . "_";
    }

    # Update the index...
    $Hawkeye->StoreIndex( $Name );

    # Create the script to actually run the probe
    my ($Fh, $File) = mkstemp( "/tmp/tmpfileXXXXX" );
    local(*FH) = $Fh;
    print FH "GLOBUS_LOCATION=$GlobusLocation\n";
    print FH "source $GlobusLocation/etc/globus-user-env.sh\n";
    print FH "$ProbePath/test.pl --non-stop --contact \"$ContactString\"" .
	" --skip-java --skip-chimera\n";
    close( FH );

    # Run the script, and wade through its (wordy) output
    if ( open( PROBE, "/bin/sh $File|" ) )
    {
	while ( <PROBE> )
	{
	    chomp;
	    if ( /^\s+test suite (\w+): (\w+)\s*(.*)/ )
	    {
		my $Test = $1;
		my $Status = $2;
		my $Description = $3;
		$Fields{$Test} = $Test; # All we care about is the test name

		$Hawkeye->Store( $Label . $Test, $Status );
		if ( ( defined $Description ) && ( $Description ne "" ) )
		{
		    $Hawkeye->Store( $Label . $Test . "_Text",
				     $Description );
		}
		else
		{
		    $Hawkeye->Store( $Label . $Test . "_Text", "none" );
		}
		$Fields{$Test."_Text"} = "";
	    }
	}
	close( PROBE );
    }

    # Kill the temp script we made...
    unlink( $File );

    # Add the contact string & host name (if we can figure it out)
    $Hawkeye->Store( $Label . "Contact", $ContactString );
    $Fields{"Contact"} = "";
    if ( $Name ne "" )
    {
	$Hawkeye->Store( $Label . "Name", $Contact );
    }
    elsif ( $ContactString =~ /(\S+):\d+:/ )
    {
	$Hawkeye->Store( $Label . "Name", $1 );
    }
    $Fields{"Name"} = "";
}
