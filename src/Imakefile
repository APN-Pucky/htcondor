CFLAGS = $(STD_C_FLAGS)

#if HAS_FORTRAN
  TEST_SUITE_F = test_suite_F.V5
#endif

#if !HAS_X
#   define kbdd
#endif

#if !DOES_CHECKPOINTING
#   define standalone
#endif

#if WANT_PVM && HAS_PVM
   #define PvmProgs starter.jim shadow.jim 
#else
   #define PvmProgs
#endif

#if USE_CONFIG_SERVER
   CONFIG_SERVER = config_server
#endif

#define Programs \
		accountant.V6 ckpt_server $(CONFIG_SERVER) \
		master.V6 negotiator.V6 schedd.V6 prio q.V6 rm.V6 \
		scripts shadow.V6 startd.V6 starter.V5 submit.V6 status.V6 \
		tools kbdd PvmProgs collector.V6

#define Libraries \
		util_lib c++_util ckpt io classad daemon_core.V6 \
		syscall_lib

#define Directories release_dir release_dir/bin release_dir/lib \
	release_dir/sbin release_dir/etc release_dir/etc/examples

all: h makefiles Directories Libraries Programs examples
release:: all

#define Tools condor_checkpoint condor_off condor_on condor_reconfig \
	condor_reconfig_schedd condor_reschedule condor_restart \
	condor_vacate condor_master_off

#define SubmitSbinFiles sbin/condor_master sbin/condor_schedd \
	sbin/condor_shadow sbin/condor_preen Tools

release.tar: stripped
	cd release_dir; rm -f release.tar; tar -cvf release.tar etc bin lib sbin

submit.tar: stripped
	cd release_dir; rm -f submit.tar; tar -cvf submit.tar etc bin lib SubmitSbinFiles

stripped: release
	cd release_dir/bin; strip *; echo 
	cd release_dir/sbin; rm Tools; strip *; echo 
	cd condor_tools; make stripped

simple_dir_target(release_dir)
simple_dir_target(release_dir/bin)
simple_dir_target(release_dir/lib)
simple_dir_target(release_dir/sbin)
simple_dir_target(release_dir/etc)
simple_dir_target(release_dir/etc/examples)
object_target(util_lib)
object_target(c++_util)
object_target(tools)
object_target(examples)
object_target(accountant.V6)
object_target(ckpt_server)
#if USE_CONFIG_SERVER
   object_target(config_server)
#endif
object_target(shadow.V6)
object_target(starter.V5)
object_target(startd.V6)
object_target(schedd.V6)
object_target(status.V6)
#if HAS_X
   object_target(kbdd)
#endif
object_target(negotiator.V6)
object_target(collector.V6)
object_target(master.V6)
object_target(q.V6)
object_target(rm.V6)
object_target(submit.V6)
object_target(test_suite_C.V5)
#if HAS_FORTRAN
   object_target($(TEST_SUITE_F))
#endif
object_target(ckpt)
object_target(syscall_lib)
object_target(io)
object_target(classad)
object_target(daemon_core.V6)
#if WANT_PVM && HAS_PVM
   object_target(starter.jim)
   object_target(shadow.jim)
#endif

makefiles:: h/Makefile
h/Makefile:
	cd h; imake IMAKE_FLAGS
h: h/Makefile
	cd h; make

object_target(prio)
object_target(scripts)

check_platform_target

clean::
	cd h; make clean
	rm -rf Makefile */Makefile */Makefile.*  release_dir
