/* XXX There shouldn't be any platform-specific info in this. - Frank */
TILDE = Tilde
LIBC = LibC
SIMPLE_LIBC = SimpleLibC
CRT0 = Crt0
SYSCALLS_EXP = SyscallsExp

TOP = Top
TMP_DIR = TmpDir
PLATFORM = Platform

PLATFORM_DIR	=	$(TOP)/$(PLATFORM)
RELEASE_DIR	=	../release_dir
STRIP_DIR	=	../strip_dir
STRIP_PVM	=	../strip_pvm
STATIC_DIR	=	../static_dir
STATIC_PVM	=	../static_pvm

SSL_DIR		=	/p/condor/workspaces/ssl
SSL_LIB		=	$(SSL_DIR)/lib
GLOBUS_DIR	=	/p/condor/workspaces/globus
GLOBUS_LIB	=	$(GLOBUS_DIR)/lib
AUTH_LIB	=	-L$(GLOBUS_LIB) -l globus_gss_assist -lglobus_gss \
			-L$(SSL_LIB) -lssl -lcrypto \
			-lresolv

LIB_DIR =		$(RELEASE_DIR)/lib
CONFIG_DIR =		$(TOP)/config
SRC_TREE =		$(TOP)/src
DOC_TREE =		$(TOP)/doc
INCLUDE_DIR =		../h
NEW_INCLUDE_DIR =	../condor_includes
C_PLUS_INCLUDE =	../condor_c++_util
#ifdef X11Include
X11_INCLUDE = X11Include
#else
X11_INCLUDE =           /usr/X11R6/include	
#endif

LIBX = XLibPath
LIBXEXT = XExtLibPath
CC = CCompiler
CPlusPlus = CPlusCompiler
STATIC	= StaticFlag
MKDEPEND = MkDepend
STAR	= *

ifdef SMP_NUM_JOBS
SMP_FLAGS = -j $(SMP_NUM_JOBS)
else
SMP_FLAGS =
endif

SYSCALL_LIB = syscall_lib

#define UNIX_RT0	$(CRT0)
#define UNIX_LIBC	$(LIBC)
#define CKPT_RT0	$(RELEASE_DIR)/lib/condor_rt0.o
#define CONDOR_RT0	$(RELEASE_DIR)/lib/condor_rt0.o
#define CKPT_LIBC	$(RELEASE_DIR)/lib/libckpt.a
#define CONDOR_LIBC	$(RELEASE_DIR)/lib/libcondor.a

#if USES_ROOT_RUID
#define UidFlags -DUSE_ROOT_RUID
#else
#define UidFlags
#endif

#if HAS_VOID_SIGNAL_RETURN
#define SigFlag -DVOID_SIGNAL_RETURN
#else
#define SigFlag
#endif

#define AR_DELETE(libname,objects) ar d libname objects
#define AR_EXTRACT(libname,objects) ar x libname objects

#if HAS_AR_S_OPTION
#define AR_REPLACE(libname,objects) ar vrs libname objects
#else
#define AR_REPLACE(libname,objects) \
	ar vr libname objects @@\
	ranlib libname
#endif


#if HAS_CP_PRESERVE			/* cp lib w/o changing modify time - don't ranlib */
#	define COPY_LIBRARY(src,dst) cp -p src dst
#	define RANLIB_TOUCH(lib)	/**/
#else
#	if HAS_RANLIB_TOUCH		/* cp lib changes modify time - ranlib -t */
#		define COPY_LIBRARY(src,dst) cp src dst
#		define RANLIB_TOUCH(libname) ranlib -t libname
#	else						/* dumb cp and ranlib - do it the hard way */
#		define COPY_LIBRARY(src,dst) cp src dst
#		define RANLIB_TOUCH(libname) ranlib libname
#	endif
#endif

#ifdef XIncludeFlag
#define XInclude XIncludeFlag
#else
#define XInclude
#endif

OS_FLAG = OperatingSystem
ARCH_FLAG = Architecture

#if IS_ALPHA_OSF1
DEBUG_FLAG = -ggdb
#else
DEBUG_FLAG = -g
#endif

#if IS_GLIBC
#define GlibCFlag -DGLIBC
#else
#define GlibCFlag
#endif

#if IS_I386_LINUX
#define PlatformFlags -m486 GlibCFlag
#elif (IS_SUN4M_SOLARIS251) || (IS_X86_SOLARIS25)
#define PlatformFlags -DSolaris251
#else
#define PlatformFlags
#endif

STD_C_PLUS_FLAGS = CFlags -I$(INCLUDE_DIR) -I$(NEW_INCLUDE_DIR) \
 -I$(C_PLUS_INCLUDE) XInclude -D$(ARCH_FLAG) -D$(OS_FLAG) \
 SigFlag CompatFlags UidFlags $(DEBUG_FLAG) PlatformFlags

STD_C_FLAGS = $(STD_C_PLUS_FLAGS)

#ifndef TypicalMemory
#define TypicalMemory 12
#endif

#if IS_I386_LINUX
#define YACC byacc
#else
#define YACC yacc
#endif
